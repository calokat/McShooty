cmake_minimum_required(VERSION 3.16)
project("McShooty")
set(CXX_STANDARD "17")
file(GLOB src "*.h" "*.cpp")
include_directories(".")
add_executable(Game ${src})
set_property(TARGET Game PROPERTY CXX_STANDARD 17)
if(UNIX)
include_directories("~/git/vcpkg/installed/x64-linux/include")
endif(UNIX)
if (UNIX)
# set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -g")
endif(UNIX)
if(UNIX)
find_package(X11 REQUIRED)
find_package(SDL2 CONFIG REQUIRED)
target_link_libraries(Game PRIVATE X11 Xext)
target_link_libraries(Game PRIVATE SDL2::SDL2 SDL2::SDL2main SDL2::SDL2-static)
endif(UNIX)
if(UNIX)
set_target_properties(Game PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_BINARY_DIR}/out")
elseif(WIN32)
set_target_properties(Game PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_CURRENT_BINARY_DIR}/${CMAKE_BUILD_TYPE}/out")
find_package(openxr CONFIG REQUIRED)
target_link_libraries(Game PRIVATE OpenXR::headers OpenXR::openxr_loader)
add_compile_definitions(XR_USE_GRAPHICS_API_OPENGL)
add_compile_definitions(XR_USE_PLATFORM_WIN32)
endif(UNIX)
find_package(glm CONFIG REQUIRED)
find_package(GLEW REQUIRED)
find_package(assimp CONFIG REQUIRED)
target_link_libraries(Game PRIVATE GLEW::GLEW)
target_link_libraries(Game PRIVATE assimp::assimp)
